rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    function __validator_meta__(data) {
      return (
        (request.method == "create" && data._createdAt == request.time && data._updatedAt == request.time)
          || (request.method == "update" && data._createdAt == resource.data._createdAt && data._updatedAt == request.time)
      );
    }

    function __validator_keys__(data, keys) {
      return data.keys().removeAll(['_createdAt', '_updatedAt']).hasOnly(keys);
    }

    function isAdmin() {
      return exists(/databases/$(database)/documents/admins/$(request.auth.uid));
    }

    function requestUserIs(uid) {
      return request.auth.uid == uid;
    }

    match /users/{uid} {
      function __validator_0__(data) {
        return (__validator_meta__(data) && (
          __validator_keys__(data, ['uid', 'family_id', 'email', 'phone_number', 'first_name', 'first_name_kana', 'last_name', 'last_name_kana', 'birthday', 'relationship', 'zip_code', 'address', 'hobby', 'image', 'created_at', 'updated_at'])
            && data.uid is string
            && data.family_id is string
            && (data.email is string && data.email.size() >= 1)
            && data.phone_number is string
            && (data.first_name is string && data.first_name.size() <= 20)
            && (data.first_name_kana == "" || (data.first_name_kana is string && data.first_name_kana.size() <= 20 && data.first_name_kana.matches("^[\\p{scx=Katakana}|ｦ-ﾟ]+$")))
            && (data.last_name is string && data.last_name.size() <= 20)
            && (data.last_name_kana == "" || (data.last_name_kana is string && data.last_name_kana.size() <= 20 && data.last_name_kana.matches("^[\\p{scx=Katakana}|ｦ-ﾟ]+$")))
            && (data.birthday == "" || (data.birthday is string && data.birthday.matches("^(19\\d{2}|20\\d{2})-(0[1-9]|1[0-2])-(0[1-9]|[1-2]\\d|3[01])$")))
            && (data.relationship == "" || data.relationship == "世帯主" || data.relationship == "配偶者" || data.relationship == "子供" || data.relationship == "親" || data.relationship == "同居人")
            && data.zip_code is string
            && data.address is string
            && data.hobby is string
            && (data.image.id is string && data.image.path is string)
            && data.created_at is timestamp
            && data.updated_at is timestamp
        ));
      }

      allow read: if (requestUserIs(uid) || isAdmin());
      allow write: if ((requestUserIs(uid) || isAdmin()) && __validator_0__(request.resource.data));
    }
  }
}